// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createValidator() should return what validate function returns 1`] = `
Object {
  "message": "Test",
  "path": Array [],
  "requirement": Object {
    "message": "Inner requirement",
    "path": Array [],
    "type": "single",
    "value": 1,
  },
  "type": "dependence",
  "value": 1,
}
`;

exports[`groupErrors() should work for complex values 1`] = `
Object {
  "children": Array [
    Object {
      "children": null,
      "errors": Array [
        "Value should be a string",
      ],
      "path": "email",
    },
    Object {
      "children": null,
      "errors": Array [
        "Value should be a number",
      ],
      "path": "number",
    },
  ],
  "errors": Array [
    "Value should have a valid shape",
  ],
  "path": "",
}
`;

exports[`groupErrors() should work for complex values 2`] = `
Object {
  "children": Array [
    Object {
      "children": null,
      "errors": Array [
        "Value should be a string",
      ],
      "path": "email",
    },
    Object {
      "children": null,
      "errors": Array [
        "Value should be defined",
      ],
      "path": "address",
    },
  ],
  "errors": Array [
    "Value should have a valid shape",
  ],
  "path": "",
}
`;

exports[`groupErrors() should work for complex values 3`] = `
Object {
  "children": Array [
    Object {
      "children": null,
      "errors": Array [
        "Value should be a string",
      ],
      "path": "email",
    },
    Object {
      "children": null,
      "errors": Array [
        "Value should be a string",
      ],
      "path": "city",
    },
    Object {
      "children": null,
      "errors": Array [
        "Value should be a number",
      ],
      "path": "house",
    },
  ],
  "errors": Array [
    "Value should have a valid shape",
  ],
  "path": "",
}
`;

exports[`groupErrors() should work for complex values 4`] = `
Object {
  "children": Array [
    Object {
      "children": null,
      "errors": Array [
        "Value should be a string",
      ],
      "path": "email",
    },
    Object {
      "children": Array [
        Object {
          "children": null,
          "errors": Array [
            "Value should be a string",
          ],
          "path": "city",
        },
        Object {
          "children": null,
          "errors": Array [
            "Either Value should be a string OR Value should be a number",
            "Value should be a string",
            "Value should be a number",
          ],
          "path": "house",
        },
      ],
      "errors": Array [
        "Either Value should have a valid shape OR Value should be a string",
        "Value should have a valid shape",
        "Value should be a string",
      ],
      "path": "address",
    },
  ],
  "errors": Array [
    "Value should have a valid shape",
  ],
  "path": "",
}
`;

exports[`groupErrors() should work for single error 1`] = `
Object {
  "children": null,
  "errors": Array [
    "Value should be a string",
  ],
  "path": "",
}
`;

exports[`groupErrors() should work for single-path errors 1`] = `
Object {
  "children": null,
  "errors": Array [
    "Either Value should be a string OR Value should be a number",
    "Value should be a string",
    "Value should be a number",
  ],
  "path": "",
}
`;
